<% pageTitle = 'Registered Clients' %>

<div class="container mt-5">
    <div class="card mb-4">
        <div class="card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <input type="text" id="searchBar" class="form-control mb-4 w-75" placeholder="Search clients...">
                <a href="/client/register" class="btn btn-success">Add Client</a>
            </div>
        <div class="card-body p-0">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th style="width: 10px">#</th>
                        <th>Client ID</th>
                        <th>Full Name</th>
                        <th>Contact</th>
                        <th>Email</th>
                        <th>Address</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% clients.forEach((client, index) => { %>
                        <tr class="align-middle">
                            <td><%= index + 1 %></td>
                            <td><%= client.client_id %></td>
                            <td><%= client.firstname %> <%= client.lastname %></td>
                            <td><%= client.contact %></td>
                            <td><%= client.email %></td>
                            <td><%= client.address %></td>
                            <td>
                                <button class="btn btn-sm btn-primary" onclick="openUpdateModal('<%= client.id %>', '<%= client.firstname %>', '<%= client.lastname %>', '<%= client.contact %>', '<%= client.email %>', '<%= client.address %>')">Update</button>
                                <a href="/client/delete/<%= client.id %>" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this client?');">Delete</a>
                                <a href="/client/clientDetails/<%= client.client_id %>" class="btn btn-sm btn-secondary">Test</a>
                                <a href="/client/clientDetails/<%= client.client_id %>" class="btn btn-sm btn-secondary">View</a>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Pagination Links -->
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <% if (currentPage > 1) { %>
                <li class="page-item">
                    <a class="page-link" href="/client/all?page=<%= currentPage - 1 %>">Previous</a>
                </li>
            <% } %>
            <% for (let i = 1; i <= totalPages; i++) { %>
                <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                    <a class="page-link" href="/client/getall?page=<%= i %>"><%= i %></a>
                </li>
            <% } %>
            <% if (currentPage < totalPages) { %>
                <li class="page-item">
                    <a class="page-link" href="/client/getall?page=<%= currentPage + 1 %>">Next</a>
                </li>
            <% } %>
        </ul>
    </nav>
</div>

    <!-- Update Client Modal -->
    <div class="modal fade" id="updateModal" tabindex="-1" role="dialog" aria-labelledby="updateModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <form id="updateForm" method="POST">
                    <div class="modal-header">
                        <h5 class="modal-title" id="updateModalLabel">Update Client</h5>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="firstname">First Name</label>
                            <input type="text" class="form-control" id="firstname" name="firstname" required>
                        </div>
                        <div class="form-group">
                            <label for="lastname">Last Name</label>
                            <input type="text" class="form-control" id="lastname" name="lastname" required>
                        </div>
                        <div class="form-group">
                            <label for="contact">Contact</label>
                            <input type="text" class="form-control" id="contact" name="contact" required>
                        </div>
                        <div class="form-group">
                            <label for="contact">Email</label>
                            <input type="text" class="form-control" id="email" name="email" required>
                        </div>
                        <div class="form-group">
                            <label for="contact">Address</label>
                            <input type="textArea" class="form-control" id="address" name="address" required>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" onclick="closeModal()">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript for Modal and Form Population -->
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

<script>
    function openUpdateModal(id, firstname, lastname, contact, email, address) {
        // Set the form action URL to include the client ID
        document.getElementById('updateForm').action = `/client/update/${id}`;

        // Populate the form fields with client data
        document.getElementById('firstname').value = firstname;
        document.getElementById('lastname').value = lastname;
        document.getElementById('contact').value = contact;
        document.getElementById('email').value = email;
        document.getElementById('address').value = address;

        // Show the modal
        $('#updateModal').modal('show');
    }
    function closeModal() {
        $('#updateModal').modal('hide');
    }

</script>
<script>
    const tableBody = document.querySelector('tbody');
    const paginationContainer = document.querySelector('.pagination');
    const searchBar = document.getElementById('searchBar');

    // Function to fetch and render clients (supports search and pagination)
    async function fetchClients(page = 1, query = "") {
        try {
            const url = query
                ? `/client/search?q=${encodeURIComponent(query)}&page=${page}`
                : `/client/all?page=${page}`;
            const response = await fetch(url);

            if (!response.ok) throw new Error("Failed to fetch clients");

            const { clients, currentPage, totalPages } = await response.json();

            // Clear the table body
            tableBody.innerHTML = "";

            // Populate the table with clients
            if (clients.length === 0) {
                tableBody.innerHTML = `<tr><td colspan="7" class="text-center">No clients found</td></tr>`;
                renderPagination(currentPage, totalPages, query);
                return;
            }

            clients.forEach((client, index) => {
            const row = `
            <tr class="align-middle">
            <td>${index + 1 + (currentPage - 1) * 30}</td>
            <td>${client.client_id}</td>
            <td>${client.firstname}</td>
            <td>${client.contact}</td>
            <td>${client.email}</td>
            <td>${client.address}</td>
            <td>
                <button 
                    class="btn btn-sm btn-primary" 
                    onclick="openUpdateModal('${client.id}', '${client.firstname}', '${client.lastname}', '${client.contact}', '${client.email}', '${client.address}')">
                    Update
                </button>
                <a 
                    href="/client/delete/${client.id}" 
                    class="btn btn-sm btn-danger" 
                    onclick="return confirm('Are you sure you want to delete this client?');">
                    Delete
                </a>
                <a href="/client/clientDetails/${client.client_id}" class="btn btn-sm btn-secondary">View</a>
            </td>
        </tr>
    `;
    tableBody.insertAdjacentHTML('beforeend', row);
});


            // Render pagination controls
            renderPagination(currentPage, totalPages, query);
        } catch (error) {
            console.error("Error fetching clients:", error);
            tableBody.innerHTML = `<tr><td colspan="7" class="text-center text-danger">An error occurred while fetching clients</td></tr>`;
        }
    }

    // Function to render pagination controls
    function renderPagination(currentPage, totalPages, query = "") {
        paginationContainer.innerHTML = "";

        if (currentPage > 1) {
            paginationContainer.insertAdjacentHTML(
                "beforeend",
                `<li class="page-item">
                    <a class="page-link" href="#" onclick="fetchClients(${currentPage - 1}, '${query}')">Previous</a>
                </li>`
            );
        }

        for (let i = 1; i <= totalPages; i++) {
            paginationContainer.insertAdjacentHTML(
                "beforeend",
                `<li class="page-item ${i === currentPage ? "active" : ""}">
                    <a class="page-link" href="#" onclick="fetchClients(${i}, '${query}')">${i}</a>
                </li>`
            );
        }

        if (currentPage < totalPages) {
            paginationContainer.insertAdjacentHTML(
                "beforeend",
                `<li class="page-item">
                    <a class="page-link" href="#" onclick="fetchClients(${currentPage + 1}, '${query}')">Next</a>
                </li>`
            );
        }
    }

    // Event listener for search bar
    searchBar.addEventListener('input', () => {
        const query = searchBar.value.trim();
        fetchClients(1, query); // Always start from page 1 when searching
    });

    // Initial load: Fetch all clients (page 1)
    fetchClients();
</script>
