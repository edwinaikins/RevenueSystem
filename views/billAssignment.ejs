<% pageTitle = 'Billing Assignment' %>
<div class="container mt-5">
    <h3>Bill Assignment to Collectors</h3>

    <!-- Batch Assignment Section -->
    <div class="card mb-4">
        <div class="card-header">
            <h5>Batch Assign Bills</h5>
        </div>
        <div class="card-body">
            <div class="form-group">
                <label for="batchCollectorSelect">Select Collector</label>
                <select class="form-control" id="batchCollectorSelect" required>
                    <option value="">Select Collector</option>
                </select>
            </div>
            <button class="btn btn-primary" id="batchAssignButton">Assign Selected Bills</button>
        </div>
    </div>

    <!-- All Bills Table -->
    <div class="card mb-4">
        <div class="card-header">
            <h5>All Bills</h5>
            <select class="form-control mb-3" id="filterStatus">
                <option value="ALL">All Bills</option>
                <option value="Yes">Assigned</option>
                <option value="No" selected>Unassigned</option>
            </select>
        </div>
        <div class="card-body">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th><input type="checkbox" id="selectAllCheckbox"></th>
                        <th>Bill ID</th>
                        <th>Entity Name</th>
                        <th>Entity Type</th>
                        <th>Location</th>
                        <th>Amount</th>
                        <th>Assigned Collector</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="allBillsTable">
                    <!-- All bills will be dynamically populated here -->
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Reassign Modal -->
<div class="modal fade" id="reassignModal" tabindex="-1" role="dialog" aria-labelledby="reassignModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reassignModalLabel">Reassign Bill</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="reassignCollectorSelect">Select Collector</label>
                    <select class="form-control" id="reassignCollectorSelect" required>
                        <option value="">Select Collector</option>
                    </select>
                </div>
                <input type="hidden" id="billIdToReassign">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmReassignButton">Reassign Bill</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

<script>
    async function fetchCollectors() {
        try {
            const response = await fetch('/collector/getCollector');
            if (!response.ok) throw new Error('Failed to fetch collectors');
            const data = await response.json();
            return data.collectors;
        } catch (error) {
            console.error('Error fetching collectors:', error);
            alert('Unable to fetch collectors. Please try again later.');
            return [];
        }
    }

    async function fetchBills(status = '') {
        try {
            const response = await fetch(`/billing/getBillByStatus?status=${status}`);
            if (!response.ok) throw new Error('Failed to fetch bills');
            const data = await response.json();
            return data.bills;
        } catch (error) {
            console.error('Error fetching bills:', error);
            alert('Unable to fetch bills. Please try again later.');
            return [];
        }
    }

    async function populateCollectorDropdown() {
        const collectors = await fetchCollectors();
        const dropdowns = [document.getElementById('batchCollectorSelect'), document.getElementById('reassignCollectorSelect')];

        dropdowns.forEach(dropdown => {
            dropdown.innerHTML = '<option value="">Select Collector</option>';
            collectors.forEach(collector => {
                const option = document.createElement('option');
                option.value = collector.collector_id;
                option.textContent = collector.name;
                dropdown.appendChild(option);
            });
        });
    }

    async function populateAllBillsTable(filter = '') {
        const bills = await fetchBills(filter);
        const allBillsTable = document.getElementById('allBillsTable');
        allBillsTable.innerHTML = ''; 
        
        if (!bills.length) {
        allBillsTable.innerHTML = `<tr><td colspan="8" class="text-center">No bills found</td></tr>`;
        return;
         }

        bills.forEach(bill => {
            const isAssigned = !!bill.Collector_Assigned;
            const row = `
                <tr>
                    <td>
                        <input type="checkbox" class="billCheckbox" value="${bill.Bill_ID}" ${isAssigned ? 'disabled' : ''}>
                    </td>
                    <td>${bill.Bill_ID}</td>
                    <td>${bill.Entity_Name}</td>
                    <td>${bill.Entity_Type}</td>
                    <td>${bill.Location}</td>
                    <td>${bill.Bill_Amount}</td>
                    <td>${bill.Collector_Assigned || 'Not Assigned'}</td>
                    <td>
                        ${isAssigned 
                            ? `<button class="btn btn-sm btn-warning reassignButton" data-bill-id="${bill.Bill_ID}" data-toggle="modal" data-target="#reassignModal">Reassign</button>`
                            : ''
                        }
                    </td>
                </tr>
            `;
            allBillsTable.insertAdjacentHTML('beforeend', row);
        });

        document.querySelectorAll('.reassignButton').forEach(button => {
            button.addEventListener('click', function() {
                const billId = this.getAttribute('data-bill-id');
                document.getElementById('billIdToReassign').value = billId;
            });
        });
    }

    document.getElementById('filterStatus').addEventListener('change', function () {
    const filter = this.value; // Get the selected filter value
    populateAllBillsTable(filter); // Call the table population with the filter
});

    async function handleBatchAssign() {
        const selectedCollector = document.getElementById('batchCollectorSelect').value;
        if (!selectedCollector) {
            alert('Please select a collector for batch assignment.');
            return;
        }

        const selectedBills = [...document.querySelectorAll('.billCheckbox:checked')].map(cb => cb.value);
        if (selectedBills.length === 0) {
            alert('Please select at least one bill.');
            return;
        }

        try {
            const response = await fetch('/collector/billAssign', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ collectorId: selectedCollector, billIds: selectedBills })
            });

            if (!response.ok) throw new Error('Failed to assign bills');
            alert('Bills successfully assigned.');
            populateAllBillsTable(); 
        } catch (error) {
            console.error('Error in batch assignment:', error);
            alert('Failed to assign bills. Please try again.');
        }
    }

    async function handleReassign() {
        const billId = document.getElementById('billIdToReassign').value;
        const selectedCollector = document.getElementById('reassignCollectorSelect').value;

        if (!selectedCollector) {
            alert('Please select a collector.');
            return;
        }

        try {
            const response = await fetch('/collector/billReassign', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ billId, collectorId: selectedCollector })
            });

            if (!response.ok) throw new Error('Failed to reassign bill');
            alert('Bill successfully reassigned.');
            const reassignModal = new bootstrap.Modal(document.getElementById('reassignModal'));
            reassignModal.hide();
            populateAllBillsTable(); 
        } catch (error) {
            console.error('Error in reassignment:', error);
            alert('Failed to reassign bill. Please try again.');
        }
    }

    // Initialize the page with default filter
    document.addEventListener('DOMContentLoaded', function () {
    populateCollectorDropdown();
    populateAllBillsTable('No'); // Load only unassigned bills by default
    document.getElementById('filterStatus').value = 'No'; // Set default filter selection in the dropdown
    document.getElementById('batchAssignButton').addEventListener('click', handleBatchAssign);
    document.getElementById('confirmReassignButton').addEventListener('click', handleReassign);
});

</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
